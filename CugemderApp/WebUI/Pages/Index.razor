@page "/"
@inject AspNetUsersDAL userDAL
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime js

<style>
    .emp-profile {
        padding: 3%;
        margin-top: 3%;
        margin-bottom: 3%;
    }

    .nav-link-active {
        background-color: red !important;
    }

    .navbar-light .navbar-nav .nav-link:hover {
        color: red !important;
    }


    .profile-img {
        width: 200px;
        height: 200px;
        overflow: hidden;
        border-radius: 50%;
    }

        .profile-img img {
            max-width: 100%;
            height: auto;
            min-height: 200px;
            object-fit: cover;
        }

        .profile-img .file {
            position: relative;
            overflow: hidden;
            margin-top: -20%;
            width: 70%;
            border: none;
            border-radius: 0;
            font-size: 15px;
            background: #212529b8;
        }

            .profile-img .file input {
                position: absolute;
                opacity: 0;
                right: 0;
                top: 0;
            }

    .profile-head h5 {
        color: #333;
    }

    .profile-head h6 {
        color: #0062cc;
    }

    .profile-edit-btn {
        border: none;
        border-radius: 1.5rem;
        width: 70%;
        padding: 2%;
        font-weight: 600;
        color: #6c757d;
        cursor: pointer;
    }

    .proile-rating {
        font-size: 12px;
        color: #818182;
    }


    .profile-head .nav-tabs {
        margin-bottom: 5%;
        margin-right: 3px;
    }

        .profile-head .nav-tabs .nav-link {
            font-weight: 600;
            border: none;
        }

            .profile-head .nav-tabs .nav-link.active {
                border: none;
                border-bottom: 2px solid red;
            }

    .profile-work {
        padding: 14%;
        padding-top: 5%;
        margin-top: -15%;
    }

        .profile-work p {
            font-size: 12px;
            color: #818182;
            font-weight: 600;
            margin-top: 10%;
        }

        .profile-work a {
            text-decoration: none;
            color: #495057;
            font-weight: 600;
            font-size: 14px;
        }

        .profile-work ul {
            list-style: none;
        }

    .profile-tab label {
        font-weight: 600;
    }

    .profile-tab p {
        font-weight: 600;
        color: #0062cc;
    }
</style>

@if (loggedUser == null)
{
<p> Yükleniyor...</p>
}
else
{


<div class="container emp-profile">
    <div class="row">
        <div class="col-md-4">
            <center>
                <div class="profile-img">
                    <img src="@loggedUser.PhotoUrl" alt="" />
                </div>
            </center>
        </div>
        <div class="col-md-6">
            <div class="profile-head">
                <br />
                <h4 class="d-flex justify-content-center">
                    @loggedUser.FirstName @loggedUser.LastName.ToUpper()
                </h4>
                <br />
                @{
                    if (loggedUser.Company != null)
                    {
                        <h6 style="color:red">Şirket Adı: <span style="font-size:16px;" class="proile-rating">@loggedUser.Company</span></h6>
                    }
                }
                @{
                    if (loggedUser.Speciality != null)
                    {
                        <h6 style="color:red;">Faaliyet Alanı: <span style="font-size:16px;" class="proile-rating">@loggedUser.Speciality</span></h6>
                    }
                }
                <br />
                @if (loggedUser.Summary != null)
                {
                    <div style="margin-top: 5px;">
                        <h6 style="color: red; margin-bottom: 0px; float:left;">Hakkında</h6>
                        <br />
                        <div style="font-size:16px; padding-top: 10px; white-space: pre-line; font-weight:500" class="proile-rating">
                            @System.Web.HttpUtility.HtmlDecode(loggedUser.Summary)
                        </div>
                    </div>
                }


                <br />
                @if (loggedUser.PointsNavigation != null)
                {
                    <h6 style="color:red;">BeePort Puanı:</h6>

                    <div>
                        <div class="progress">
                            <div class="progress-bar-striped progress-bar progress-bar-animated @progressBarColor((int)loggedUser.PointsNavigation.TotalPoints)"
                                 style="width: @((int)loggedUser.PointsNavigation.TotalPoints)%"
                                 aria-valuemin="0" aria-valuemax="100" aria-valuenow="@((int)loggedUser.PointsNavigation.TotalPoints)">%@((int)loggedUser.PointsNavigation.TotalPoints)</div>
                        </div>
                        <h6 class="proile-rating" style="margin-top: 7px;">
                            <span style="font-size:16px;" class="proile-rating">
                                Grup Sıralaması :      @if (standings[loggedUser.Email] != null)
                                {
                                    @standings[loggedUser.Email];
                                }
                            </span>
                        </h6>
                    </div>
                }

                <br />
                <ul class="nav nav-tabs d-flex justify-content-sm-around justify-content-between" id="myTab" role="tablist">
                    <li @onclick="@( () => ChangeTabs(1))" class="nav-item">
                        <p class="@(isTabActive(tab1))" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">İş Bilgileri</p>
                    </li>
                    <li @onclick="@( () => ChangeTabs(2))" class="nav-item">
                        <p class="@(isTabActive(tab2))" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">Kişisel</p>
                    </li>
                    <li @onclick="@( () => ChangeTabs(3))" class="nav-item">
                        <p class="@(isTabActive(tab3))" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">İletişim</p>
                    </li>
                </ul>
            </div>
        </div>
        <div class="col-md-2">
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
        </div>
        <div class="col-md-8">
            <div class="tab-content profile-tab" id="myTabContent">
                <!-- Tab 1 Stars-->
                <div hidden="@tab1" class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                    @if (loggedUser.GroupNavigation != null)
                        {
                    <div class="row">
                        <h6 class="col-md-6" style="color:red">Grup: <span style="font-size:16px;" class="proile-rating">@loggedUser.GroupNavigation.GroupName</span></h6>
                    </div>
                        }
                    @if (loggedUser.JobTitleNavigation != null)
                        {
                    <div class="row">
                        <h6 class="col-md-6" style="color:red">Meslek: <span style="font-size:16px;" class="proile-rating">@loggedUser.JobTitleNavigation.TitleName</span></h6>
                    </div>
                        }
                    @if (loggedUser.PositionNavigation != null)
                        {
                    <div class="row">
                        <h6 class="col-md-6" style="color:red">Pozisyon: <span style="font-size:16px;" class="proile-rating">@loggedUser.PositionNavigation.Position</span></h6>
                    </div>
                    <div class="row">
                        <h6 class="col-md-6" style="color:red">
                            @if (loggedUser.PositionNavigation.Id == 4)
                                    {
                            @if (loggedUser.Year != null)
                                        {
                            <h6>
                                Mezuniyet Yılı: <span style="font-size:16px;" class="proile-rating">@loggedUser.Year</span>
                            </h6>
                                        }
                                    }
                                    else
                                    {
                            @if (loggedUser.Year != null)
                                        {
                            <h6>
                                Firma Kuruluş Yılı: <span style="font-size:16px;" class="proile-rating">@loggedUser.Year</span>
                            </h6>
                                        }
                                    }
                        </h6>
                    </div>

                        }
                </div>
                <!-- Tab 1 Ends-->
                <!-- Tab 2 Start -->
                <div hidden="@tab2" class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                    @if (loggedUser.LocatedCityNavigation != null)
                        {
                    <div class="row">
                        <h6 class="col-md-6" style="color:red">Şehir: <span style="font-size:16px;" class="proile-rating">@loggedUser.LocatedCityNavigation.CityName</span></h6>
                    </div>

                        }
                    @if (loggedUser.GenderNavigation != null)
                        {
                    <div class="row">
                        <h6 class="col-md-6" style="color:red">Cinsiyet: <span style="font-size:16px;" class="proile-rating">@loggedUser.GenderNavigation.GenderName</span></h6>
                    </div>
                        }
                    @if (loggedUser.DateOfBirth != null)
                        {
                <div class="row">
                    @if (calculateAge(loggedUser.DateOfBirth.GetValueOrDefault()) > 18)
                    {
                        <h6 class="col-md-6" style="color:red">Yaş: <span style="font-size:16px;" class="proile-rating">@(calculateAge(loggedUser.DateOfBirth.GetValueOrDefault()))</span></h6>
                    }
                </div>
                        }
                    @if (loggedUser.RelationshipNavigation != null)
                        {
                    <div class="row">
                        <h6 class="col-md-6" style="color:red">Medeni Hali: <span style="font-size:16px;" class="proile-rating">@loggedUser.RelationshipNavigation.RelationshipStatus</span></h6>
                    </div>
                        }
                </div>
                <!-- Tab 2 Ends-->
                <!-- Tab 3 Starts-->
                <div hidden="@tab3" class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                    <div class="row">
                        <h6 class="col-md-6" style="color:red">E-mail: <span style="font-size:16px;" class="proile-rating">@loggedUser.Email</span></h6>
                    </div>
                    @if (loggedUser.PhoneNumber != null)
                        {
                    <div class="row">
                        <h6 class="col-md-6" style="color:red">Telefon: <span @onclick="@( () => DialNumber(loggedUser.PhoneNumber))" style="font-size:16px; color:dodgerblue" class="proile-rating">@String.Format("{0:0(###) ### ####}", Convert.ToInt64(loggedUser.PhoneNumber))</span></h6>
                    </div>
                        }
                    @if (loggedUser.Website != null)
                        {
                    <div class="row">
                        <h6 class="col-md-6" style="color:red">Web Sitesi: <span @onclick="@( () => GoToWebsite(loggedUser.Website))" style="font-size:16px; color:dodgerblue; text-decoration:underline;" class="proile-rating">@loggedUser.Website</span></h6>
                    </div>
                        }
                </div>
                <!-- Tab 3 Ends-->
            </div>
        </div>
    </div>
</div>
}


@code {

    private AspNetUsers loggedUser;
    private List<AspNetUsers> userlist, tempList;
    bool tab1 = false, tab2 = true, tab3 = true;
    private string _userId;
    int standingNo = 1;
    Dictionary<string, int> standings = new Dictionary<string, int>();


    public delegate bool onSubscribe(string groupname);
    public delegate bool onUnSubscribe(string groupname);

    public delegate void SubscribeTopicEventHandler(string groupname, string username);
    public delegate void UnsubscribeTopicEventHandler(string groupname);

    public static event SubscribeTopicEventHandler topicSubscribed;
    public static event UnsubscribeTopicEventHandler topicUnsubscribed;

    protected virtual void onTopicSubscribed(string groupname, string username)
    {
        if (topicSubscribed != null)
            topicSubscribed(groupname, username);

    }

    protected virtual void onTopicUnsubscribed(string groupname)
    {
        if (topicUnsubscribed != null)
            topicUnsubscribed(groupname);

    }

    public void Unsubscribe(string groupname)
    {
        onTopicUnsubscribed(groupname);
    }

    public void Subscribe(string groupname, string username)
    {
        onTopicSubscribed(groupname, username);
    }

    void ChangeTabs(int tab)
    {
        switch (tab)
        {
            case 1:
                tab1 = false;
                tab2 = true;
                tab3 = true;
                break;
            case 2:
                tab1 = true;
                tab2 = false;
                tab3 = true;
                break;
            case 3:
                tab1 = true;
                tab2 = true;
                tab3 = false;
                break;
        }

    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            loggedUser = await userDAL.GetUsername(user.Identity.Name);
            if (loggedUser.GroupNavigation != null)
            {
                if (loggedUser.IsTopicSubscribed.GetValueOrDefault() && loggedUser.LastGroupName != loggedUser.GroupNavigation.GroupName && loggedUser.LastGroupName != null)
                {
                    Unsubscribe(loggedUser.LastGroupName);
                    Subscribe(loggedUser.GroupNavigation.GroupName, "");
                }
                else if (loggedUser.IsTopicSubscribed.GetValueOrDefault() != true)
                {
                    Subscribe(loggedUser.GroupNavigation.GroupName, loggedUser.Id);
                    loggedUser.IsTopicSubscribed = true;
                    await userDAL.PutUser(loggedUser.Id, loggedUser);
                }

            }
            else
            {
                Unsubscribe(loggedUser.LastGroupName);
            }
            userlist = await userDAL.GetUsersNoNullUserList();
            userlist = userlist.Where(c => c.Group == loggedUser.Group).ToList();
            foreach (var users in userlist)
            {
                standings.Add(users.Email, standingNo++);
            }
        }
    }

    public async void GoToWebsite(string link)
    {
        var uri = new UriBuilder(link).Uri;
        await Browser.OpenAsync(uri);
    }

    int calculateAge(DateTime date)
    {
        var age = DateTime.Today.Year - date.Year;

        if (date.Date > DateTime.Today.AddYears(-age)) age--;
        return age;
    }

    string isTabActive(bool isActive)
    {
        if (!isActive)
            return "nav-link active";
        else
            return "nav-link";
    }

    string progressBarColor(int pointValue)
    {
        if (pointValue < 25)
            return "bg-danger";
        else if (pointValue >= 25 && pointValue < 50)
            return "bg-warning";
        else if (pointValue >= 50 && pointValue < 75)
            return "bg-info";
        else
            return "bg-success";
    }

    void DialNumber(string number)
    {
        PhoneDialer.Open(number);
    }
}