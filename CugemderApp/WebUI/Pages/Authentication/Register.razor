@page "/register"
@layout AuthLayout
@inject NavigationManager navigationManager
@inject CugemderApp.Security.CustomStateProvider authStateProvider
@inject FileUpload fileDAL
@inject AspNetUsersDAL userDAL

<h1 class="h2 font-weight-normal login-title">
    Üye Ol
</h1>

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerRequest">
    <DataAnnotationsValidator />

    <label for="inputFirstName">Adınız:</label>
    <InputText id="inputFirstName" class="form-control" placeholder="Adınız" autofocus @bind-Value="@registerRequest.FirstName" />
    <ValidationMessage For="@(() => registerRequest.FirstName)" />
    <br />
    <label for="inputLastName">Soyadınız:</label>
    <InputText id="inputLastName" class="form-control" placeholder="Soyadınız" autofocus @bind-Value="@registerRequest.LastName" />
    <ValidationMessage For="@(() => registerRequest.LastName)" />
    <br />
    <label for="inputMail">E-mail:</label>
    <InputText id="inputMail" class="form-control" placeholder="E-mail" autofocus @bind-Value="@registerRequest.Email" />
    <ValidationMessage For="@(() => registerRequest.Email)" />
    <br />
    <label for="inputdob">Doğum Tarihi:</label>
    <InputDate id="inputdob" class="form-control" autofocus @bind-Value="@registerRequest.DateofBirth" />
    <ValidationMessage For="@(() => registerRequest.DateofBirth)" />
    <br />
    <label for="inputPhone">Telefon:</label>
    <InputText id="inputPhone" class="form-control" placeholder="Telefon" autofocus @bind-Value="@registerRequest.PhoneNo" />
    <ValidationMessage For="@(() => registerRequest.Email)" />
    <br />
    <label for="inputPassword">Şifre</label>
    <InputText type="password" id="inputPassword" class="form-control" placeholder="Şifreniz" @bind-Value="@registerRequest.Password" />
    <ValidationMessage For="@(() => registerRequest.Password)" />
    <br />
    <label for="inputPasswordConfirm">Şifre Onay</label>
    <InputText type="password" id="inputPasswordConfirm" class="form-control" placeholder="Şifre Onay" @bind-Value="@registerRequest.PasswordConfirm" />
    <ValidationMessage For="@(() => registerRequest.PasswordConfirm)" />
    <br />
    <label>Profil Fotoğrafı:</label>
    <button class="btn btn-info" type="button" @onclick="@SelectFiles">Dosya Seç</button> @* dosya yerine fotograf *@
    <br />

    <br />
    <button class="btn btn-lg btn-dark btn-block" type="submit">Üye Ol</button>
    <br />
    <label class="text-danger">@error</label>
    <NavLink href="login">
        <h6 class="font-weight-normal text-center">Zaten üye misiniz? Buradan giriş yapın.</h6>
    </NavLink>
</EditForm>

@code{

    RegisterRequest registerRequest { get; set; } = new RegisterRequest() { DateofBirth = new DateTime(1970, 01, 01) };
    string error { get; set; }

    FileResult pickResult;

    async Task OnSubmit()
    {
        error = null;
        try
        {
            UploadFiles();
            await authStateProvider.Register(registerRequest);

        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }

    async void SelectFiles()
    {
        pickResult = await FilePicker.PickAsync(new PickOptions
        {
            FileTypes = FilePickerFileType.Images
        });
    }

    async void UploadFiles()
    {
        System.IO.FileInfo fi = new System.IO.FileInfo(pickResult.FileName);
        string encodedStr = string.Format(@"{0}", Guid.NewGuid());
        var filename = $"{encodedStr}{fi.Extension}";
        var stream = await pickResult.OpenReadAsync();
        var content = new StreamContent(stream);
        var multi = new MultipartFormDataContent();
        multi.Add(content, filename, filename);
        fileDAL.UploadPhoto(multi);
        registerRequest.photoUrl = $"{AppState._http.BaseAddress.ToString()}StaticFiles/Images/{filename}";
    }


}