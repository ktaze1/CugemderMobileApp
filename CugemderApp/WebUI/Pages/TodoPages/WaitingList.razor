@page "/waitinglist"
@inject CugemderApp.DataAccessClasses.AspNetUsersDAL usersDAL
@inject CugemderApp.DataAccessClasses.GroupsDAL groupDAL
@inject CugemderApp.DataAccessClasses.PointsDAL pointDAL
@inject CugemderApp.DataAccessClasses.UploadsDAL uploadDAL


@if (waitingUsers == null)
{
    <p> Loading</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Uye Adı</th>
                <th>Atanacak Grubu</th>
                <th>Dosyaları</th>
                <th>Kullanıcıyı Sil</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in waitingUsers)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>
                        <select class="form-control"
                                @bind="user.Group">
                            <option value="0">---Grup Seçin---</option>
                            @foreach (var group in groups)
                            {
                                @if (group.Id == groupId)
                                {
                                    <option selected value="@group.Id">@group.GroupName</option>
                                }
                                else
                                {
                                    <option value="@group.Id">@group.GroupName</option>
                                }

                            }
                        </select>
                    </td>
                    <td>
                         @if (uploads == null)
                            {
                                <p> ... </p>
                            }
                            else
                            {

                                var test = uploads.Where(x => x.UserId == user.Id)
                                                .ToList();

                                foreach (Uploads item in test)
                                {
                                    <a href="/UploadedContent/@item.FileName">Indir</a>
                                }
                            }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    List<AspNetUsers> waitingUsers;
    public int groupId = 0;
    List<Groups> groups;
    List<Uploads> uploads;
    List<Points> points;

    protected override async Task OnInitializedAsync()
    {
        waitingUsers = await usersDAL.GetUsers();
        groups = await groupDAL.GetGroupsAsync();
        uploads = await uploadDAL.GetUploads();
        points = await pointDAL.GetPoints();


    }

    async void Update()
    {
    //{
    //    foreach (AspNetUsers user in waitingUsers)
    //    {
    //        await http.PutAsJsonAsync($"api/AspNetUsers/newGroup/{user.Id}", user);
    //    }
    //    await js.InvokeVoidAsync("alert", $"Updated Successfully!");
    //    uriHelper.NavigateTo("");
    }

    async Task Delete(string userId)
    {
        //var user = waitingUsers.First(x => x.Id == userId);
        //if (await js.InvokeAsync<bool>("confirm", $"Bu işlemden emin misiniz?"))
        //{
        //    await http.DeleteAsync($"api/Points/{userId}");
        //    await http.DeleteAsync($"api/Uploads/{userId}");
        //    await http.DeleteAsync($"api/AspNetUsers/{userId}");
        //}
    }
}