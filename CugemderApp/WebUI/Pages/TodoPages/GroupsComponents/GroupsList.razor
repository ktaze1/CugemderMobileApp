@page "/groups"
@inject GroupsDAL groupDAL
@inject AspNetUsersDAL userDAL

<h3>Grup Ekle</h3>
<br />
<EditForm Model="@newGroup" OnValidSubmit="@CreateGroup">
    <DataAnnotationsValidator />
    <div class="form-group">
        <div>
            <InputText @bind-Value="@newGroup.GroupName" />
            <ValidationMessage For="@(() => newGroup.GroupName)" />

            <button type="submit" class="btn btn-success">
                Kaydet
            </button>
        </div>
    </div>
</EditForm>

<h3>Grup Listesi</h3>
<br />
@if (groups == null)
{
    <text>Yükleniyor...</text>
}
else if (groups.Count == 0)
{
    <text>Kayıtlı Grup Bulunamadı!</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Grup adı</th>
                <th  class="d-flex justify-content-center">İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Groups group in groups)
            {
                <tr>
                    <td>@group.GroupName</td>
                    <td class="d-flex justify-content-end">
                        <a class="btn btn-success" href="groups/edit/@group.Id">Düzenle</a>
                        <button class="btn btn-danger" @onclick="@(() => Delete(group.Id))">Sil</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    List<Groups> groups;
    List<AspNetUsers> users;
    Groups newGroup = new Groups();


    protected override async Task OnInitializedAsync()
    {
        groups = await groupDAL.GetGroupsAsync();
        users = await userDAL.GetUsers();
    }

    void Delete(int groupsId)
    {
        var tempUsers = users.Where(c => c.Group == groupsId).ToList();
        foreach (var user in tempUsers)
        {
            user.Group = null;
            userDAL.PutUser(user.Id, user);
        }
        groupDAL.DeleteGroups(groupsId);
    }

    void CreateGroup()
    {
        groupDAL.PostGroups(newGroup);
    }
}