@page "/adminsettings"
@inject NavigationManager uriHelper
@inject FileUpload fileDAL
@inject EventsDAL eventDAL
@inject JobTitlesDAL jobDAL

<table class="table">
    <thead class="thead-light">
        <tr>
            <td><h3> Ayarlar </h3></td>
            <td></td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                <NavLink class="nav-link" href="groups">
                    <span class="oi oi-people" aria-hidden="true"></span>Grup Listesi
                </NavLink>
                <h4>Yeni Grup Ekle</h4>
                <EditForm Model="@group" OnValidSubmit="@CreateGroup">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <div>
                            <InputText @bind-Value="@group.GroupName" />
                            <ValidationMessage For="@(() => group.GroupName)" />

                            <button type="submit" class="btn btn-success">
                                Kaydet
                            </button>
                        </div>
                    </div>
                </EditForm>
            </td>
        </tr>
        <tr>
            <td>
                <NavLink class="nav-link" href="groups">
                    <span class="oi oi-people" aria-hidden="true"></span>Meslek Listesi
                </NavLink>
                <h4>Yeni Meslek Ekle</h4>
                <EditForm Model="@jobTitles" OnValidSubmit="@CreateJobTitle">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <div>
                            <InputText @bind-Value="@jobTitles.TitleName" />
                            <ValidationMessage For="@(() => jobTitles.TitleName)" />

                            <button type="submit" class="btn btn-success">
                                Kaydet
                            </button>
                        </div>
                    </div>
                </EditForm>
            </td>
        </tr>
        <tr>
            <td>
                <NavLink class="nav-link" href="addpoints">
                    <span class="oi oi-people" aria-hidden="true"></span>Puan Atamasi Yap
                </NavLink>
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <NavLink class="nav-link" href="events">
                    <span class="oi oi-people" aria-hidden="true"></span>Etkinlik Listesine Git
                </NavLink>
                <br />
                <div class="simple-form col-sm-3">
                    <h4>Yeni Etkinlik Ekle:</h4>
                    <EditForm Model="events" OnValidSubmit="CreateEvent">
                        <DataAnnotationsValidator />
                        <div class="form-group col-sm-3">
                            <label class="col-sm-3">Başlık</label>
                            <InputText @bind-Value="events.Title" class="form-control" placeholder="Başlık Giriniz" />
                            <ValidationMessage For="@(() => events.Title)" />
                        </div>
                        <div class="form-group col-sm-3">
                            <label>Lokasyon</label>
                            <InputText @bind-Value="events.Location" class="form-control" placeholder="Adres Giriniz" />
                            <ValidationMessage For="@(() => events.Location)" />
                        </div>
                        <div class="form-group col-sm-3">
                            <label class="col-sm-3">Aciklama</label>
                            <InputTextArea @bind-Value="events.Summary" class="form-control" placeholder="Açıklama Giriniz" />
                            <ValidationMessage For="@(() => events.Summary)" />
                        </div>
                        <div class="form-group col-sm-3">
                            <label class="col-sm-3" for="createdDate">Tarih ve Saat</label>
                            <InputDateTime @bind-Value="events.Date" />
                            <ValidationMessage For="@(() => events.Date)" />
                        </div>

                        <button type="submit" class="btn btn-primary">Ekle</button>
                    </EditForm>
                </div>
            </td>
        </tr>
    </tbody>
</table>

@code {

    Groups group = new Groups();
    Events events = new Events();
    JobTitles jobTitles = new JobTitles();

    protected override async Task OnInitializedAsync()
    {
        // ...
    }



    void CreateEvent()
    {
        eventDAL.PostEvents(events);
        events = new Events();
    }

    void CreateJobTitle()
    {
        jobDAL.PostJobTitles(jobTitles);
        jobTitles = new JobTitles();
    }

    void CreateGroup()
    {

    }

    async void Test()
    {
        var pickResult = await FilePicker.PickMultipleAsync();
        if(pickResult != null)
        {
            var fileList = new List<FileBase>();
            foreach (var item in pickResult)
            {
                var stream = await item.OpenReadAsync();
                var content = new StreamContent(stream);
                var multi = new MultipartFormDataContent();
                multi.Add(content, item.FileName, item.FileName);
                fileDAL.UploadDocument(multi);
            }

        }
    }

}
