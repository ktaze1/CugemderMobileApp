@page "/userlist/{id:int}"
@page "/userlist"
@using Microsoft.AspNetCore.Authorization
@inject AspNetUsersDAL userDAL
@inject GroupsDAL groupDAL
@inject PointsDAL pointDAL
@inject UploadsDAL uploadDAL
@inject NavigationManager  uriHelper

<h1> Üyeler </h1>


@if (groups == null)
{
}
else
{
    <form @onsubmit="@( () => Navigate(option))">
        <select @bind="option">
            <option selected value="0"> Tum Uyeler</option>
            @for (int i = 1; i <= groups.Count; i++)
            {
                <option value="@i">@groups[i - 1].GroupName Grubu</option>
            }
        </select>
        <button type="submit">Grup Sec</button>
    </form>
}

@if (userlist == null)
{
    <p><em>Yükleniyor...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Ad Soyad</th>
                <th>Puan</th>
                <th>Grup</th>
                <!--<th>İşlemler</th>-->
            </tr>
        </thead>
        <tbody>
            @foreach (AspNetUsers user in id.HasValue ? userlist.Where(x => x.Group == id) : userlist)
            {

                <tr>
                    <td><a href="/profile/@user.Id">@user.FirstName @user.LastName</a></td>
                    @if (user.PointsNavigation == null)
                    {
                        <td> - </td>
                    }
                    else
                    {
                        <td>@user.PointsNavigation.TotalPoints</td>
                    }
                    @if (user.GroupNavigation == null)
                    {
                        <td> - </td>
                    }
                    else
                    {
                        <td>@user.GroupNavigation.GroupName</td>
                    }
                    <!--
                            <td>
                                <a class="btn btn-success" href="users/edit/@user.Id">Düzenle</a>
                                <button class="btn btn-danger" @onclick="@(() => Delete(user.Id))">Sil</button>
                            </td>
                    -->
                </tr>
            }
        </tbody>
    </table>
}



@code {

    private List<AspNetUsers> userlist;
    private List<Groups> groups;
    [Parameter] public int? id { get; set; }
    private int option = 0;

    protected override async Task OnInitializedAsync()
    {
        userlist = await userDAL.GetUsersNoNull();
        groups = await groupDAL.GetGroupsAsync();
    }

    protected override void OnParametersSet()
    {
        option = id.GetValueOrDefault();
    }

    async Task Delete(string userId)
    {
        var user = userlist.First(x => x.Id == userId);

        pointDAL.DeletePoints(userId);
        uploadDAL.DeleteUploads(userId);
        userDAL.DeleteUser(userId);
        await OnInitializedAsync();
    }

    void Navigate(int option)
    {
        if (option == 0)
        {
            uriHelper.NavigateTo($"/userlist/");
        }
        else
        {
            uriHelper.NavigateTo($"/userlist/{groups.ElementAt(option - 1).Id}");
        }
    }


}