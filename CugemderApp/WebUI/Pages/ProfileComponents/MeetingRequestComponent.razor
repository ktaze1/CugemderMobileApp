@page "/createMeeting/{id}"
@inject AspNetUsersDAL userDAL
@inject MeetingsDAL meetingDAL
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager  uriHelper

@inject UserNotifListDAL userNotifDAL
@inject NotificationsDAL notifications

<h3>Görüşme Detaylarını Giriniz</h3>

<div class="simple-form">
    <EditForm Model="meeting" OnValidSubmit="@SubmitForm">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label>Lokasyon</label>
            <InputText @bind-Value="meeting.Location" class="form-control" placeholder="Adres Giriniz" />
            <ValidationMessage For="@(() => meeting.Location)" />
        </div>
        <div class="form-group">
            <label>Tarih</label>-->
            <InputDateTime class="form-control" @bind-Value="meeting.Date" />
            <ValidationMessage For="@(() => meeting.Date)" />
        </div>



        <button type="submit" class="btn btn-primary">Görüşme Ayarla</button>
        <button @onclick="Cancel" class="btn btn-secondary">Vazgeç</button>
    </EditForm>
</div>

@code {


    [Parameter] public string id { get; set; }

    int totalPoints;
    Meetings meeting = new Meetings() { Date = DateTime.Today };


    private AspNetUsers loggedUser;
    private string _userId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            loggedUser = await userDAL.GetUsername(user.Identity.Name);
        }
    }



    async void SubmitForm()
    {
        meeting.ReceiverId = id;
        meeting.SenderId = loggedUser.Id;
        meeting.IsApproved = false;
        meeting.IsResultedbyReceiver = false;
        meeting.IsResultedbySender = false;
        meetingDAL.PostMeetings(meeting);

        notifications.SendNotification($"{loggedUser.FirstName} {loggedUser.LastName.ToUpper()} Size {meeting.Date.ToString("F", AppState.trTR)} Tarihinde Birebir Görüşme Talebinde Bulunmuştur.", "Yeni Birebir Görüşme Talebi!", meeting.ReceiverId);

        var notification = new UserNotificationList()
        {
            Title = "Birebir Görüşme Talebi",
            Body = $" {loggedUser.FirstName} {loggedUser.LastName.ToUpper()} Size Birebir Görüşme Talebi Yollamıştır.",
            Date = DateTime.Now,
            Receiver = meeting.ReceiverId
        };
        
        await userNotifDAL.PostUserNotifications(notification);


        uriHelper.NavigateTo($"profile/{id}");
    }

    void Cancel()
    {
        uriHelper.NavigateTo($"profile/{id}");
    }

}