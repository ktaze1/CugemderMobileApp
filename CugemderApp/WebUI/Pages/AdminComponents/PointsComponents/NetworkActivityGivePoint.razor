@page "/addpointsnetworkactivity/{id}"
@inject AspNetUsersDAL userDAL
@inject PointsDAL pointDAL
@inject MeetingPointsDAL meetingPointDAL
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager uriHelper
@inject NotificationsDAL notifications
@inject NetworkingActivityPointDAL networkingActivityDAL
@inject NetworkingMeetingPointDAL networkingMeetingDAL

<h3> Puan Ver </h3>

<hr />

<div class="simple-form">
    <EditForm Model="form" OnValidSubmit="onNetworkActivitySubmit">
        <h4>NETWORKING FAALİYETLERİ DEĞERLENDİRME</h4>
        <br />
        <div class="form-group">
            <label>Toplantıya Katılım:</label>
            <select class="form-control"
                    @bind="form.point1">
                <option selected value="0">@pointBinary[0]</option>
                <option value="1">@pointBinary[1]</option>
            </select>
        </div>
        <div class="form-group">
            <label>Toplantı Saatine Uyum:</label>
            <select class="form-control"
                    @bind="form.point2">
                <option selected value="0">@pointBinary[0]</option>
                <option value="1">@pointBinary[1]</option>
            </select>
        </div>
        <div class="form-group">
            <label>Dress Code Uyumu:</label>
            <select class="form-control"
                    @bind="form.point3">
                <option selected value="0">@pointBinary[0]</option>
                <option value="1">@pointBinary[1]</option>
            </select>
        </div>
        <div class="form-group">
            <label>Mikrofon / Kamera Kalitesi / Yönetimi:</label>
            <select class="form-control"
                    @bind="form.point4">
                <option selected value="0">@pointBinary[0]</option>
                <option value="1">@pointBinary[1]</option>
            </select>
        </div>
        <div class="form-group">
            <label>Söz Kesme / Kesmeme:</label>
            <select class="form-control"
                    @bind="form.point5">
                <option selected value="0">@pointBinary[0]</option>
                <option value="1">@pointBinary[1]</option>
            </select>
        </div>
        <br />
        <hr />
        <br />
        <button type="submit" class="btn btn-primary">Puanla</button>
        <button @onclick="@( () => { form = new PointCriteria(); })" type="button" class="btn btn-secondary">Vazgeç</button>
        <br />
        <br />
    </EditForm>
</div>

<hr />

@code {

    [Parameter] public string id { get; set; }

    AspNetUsers loggedUser = new AspNetUsers(), user = new AspNetUsers();

    List<Points> pointsOfUser = new List<Points>();
    List<MeetingPoints> meetingPoints = new List<MeetingPoints>();
    Points pointToAdd = new Points();
    PointCriteria form = new PointCriteria();


    Dictionary<int, string> pointBinary = new Dictionary<int, string>()
{
        {0, "Hayır" },
        {1, "Evet" }
    };

    bool isNetworkingMeeting = false, isNetworkActivity = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userobj = authState.User;
        if (userobj.Identity.IsAuthenticated)
        {
            loggedUser = await userDAL.GetUsername(userobj.Identity.Name);

        }
        user = await userDAL.GetUsers(id);

    }

    void onNetworkActivitySubmit()
    {
        NetworkingActivityPoint networkingActivity = new NetworkingActivityPoint()
        {
            UpdatedAt = DateTime.Now,
            ReceiverUserId = id,
            AddedBy = $"{loggedUser.FirstName} {loggedUser.LastName}",
        };

        networkingActivity.TotalPoints = 20 * (form.point1 + form.point2 + form.point3
            + form.point4 + form.point5);

        networkingActivityDAL.PostNetworkingActivityPoint(networkingActivity);


        uriHelper.NavigateTo("adminaccessuserlist");
    }



    public class PointCriteria
    {
        public int point1 { get; set; }

        public int point2 { get; set; }

        public int point3 { get; set; }

        public int point4 { get; set; }

        public int point5 { get; set; }
    }

}
